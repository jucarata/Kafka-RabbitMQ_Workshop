# Puerto y nombre de la aplicación (debe coincidir con la ruta lb://trainer-service en el API Gateway)
server.port=8082
spring.application.name=trainer-service

# ----------------------------
# Base de datos H2 (dev / pruebas)
# ----------------------------
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# Consola H2
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console

# ----------------------------
# Keycloak OAuth2 Resource Server
# ----------------------------
# URI de emisión de tokens (issuer URI)
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:9090/realms/gym
# JWK Set URI para validación de firmas
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:9090/realms/gym/protocol/openid-connect/certs

# Configuración del adapter de Keycloak (si usas spring-security + keycloak-spring-boot-adapter)
keycloak.auth-server-url=http://localhost:9090/auth
keycloak.realm=gym
keycloak.resource=trainer-service
keycloak.public-client=false
keycloak.credentials.secret=BwHfH1YZNrKwRgdLE33zqTSWmLXwLfHt

# ----------------------------
# RabbitMQ (AMQP)
# ----------------------------
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

# ----------------------------
# Kafka
# ----------------------------
spring.kafka.bootstrap-servers=localhost:29092

# ----------------------------
# Eureka Client (Service Discovery)
# ----------------------------
# URL del servidor Eureka
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/
# Registrar y obtener el registry
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
# Publicar la IP en lugar del hostname
eureka.instance.prefer-ip-address=true